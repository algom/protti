% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_peptides_on_structure.R
\name{map_peptides_on_structure}
\alias{map_peptides_on_structure}
\title{Maps peptides onto a PDB structure}
\usage{
map_peptides_on_structure(
  peptide_data,
  uniprot_id,
  pdb_id,
  chain,
  start_in_pdb,
  end_in_pdb,
  map_value,
  file_format = ".cif",
  export_location = NULL,
  structure_file = NULL,
  show_progress = TRUE
)
}
\arguments{
\item{peptide_data}{a data frame containing input columns to this function. If structure files should be fetched automatically, please provide
column names to the following arguments: **uniprot_id**, **pdb_id**, **chain**, **start_in_pdb**, **end_in_pdb**, **map_value**. If a structure file is
provided in the \code{structure_file} argument, this data frame should only contain information associated with the provided structure. In case of
a user provided structure, column names should be provided to the following arguments: **uniprot_id**, **chain**, **start_in_pdb**, **end_in_pdb**,
**map_value**.}

\item{uniprot_id}{a character column in the \code{peptide_data} data frame that contains UniProt identifiers for a corresponding peptide, protein region or amino acid.}

\item{pdb_id}{a character column in the \code{peptide_data} data frame that contains PDB identifiers for structures in which a corresponding peptide, protein region or amino acid is found. This
column is not required if a structure file is provided in the \code{structure_file} argument.}

\item{chain}{a character column in the \code{peptide_data} data frame that contains the name of the chain from the PDB structure in which the peptide, protein region or amino acid is found. **Important:**
please provide the author defined chain definitions for both ".cif" and ".pdb" files. When the output of the \code{find_peptide_in_pdb} function
is used as the input for this function, this corresponds to the \code{auth_chain} column.}

\item{start_in_pdb}{a numeric column in the \code{peptide_data} data frame that contains start positions for peptides, protein regions or amino acids in the corresponding PDB structure. This information
can be obtained from the \code{find_peptide_in_pdb} function. The corresponding column in the output is called \code{peptide_start_pdb}. If amino acid positions should be
used, start and end positions are the same and the same column can be provided to both \code{start_in_pdb} and \code{end_in_pdb}.}

\item{end_in_pdb}{a numeric column in the \code{peptide_data} data frame that contains end positions for peptides, protein regions or amino acids in the corresponding PDB structure. This information
can be obtained from the \code{find_peptide_in_pdb} function. The corresponding column in the output is called \code{peptide_end_pdb}. If amino acid positions should be
used, start and end positions are the same and the same column can be provided to both \code{start_in_pdb} and \code{end_in_pdb}.}

\item{map_value}{a numeric column in the \code{peptide_data} data frame that contains a value associated with each peptide, protein region or amino acid. This value will be displayed as
a colour gradient when mapped onto the structure. The value can for example be the fold change, p-value or score associated with each peptide, protein region or amino acid (selection). If the selections should
be displayed with just one colour, the value in this column should be the same for every selection. For the mapping, values are scaled between 50 and 100. Regions in the structure
that do not map any selection receive a value of 0. If an amino acid position is associated with multiple mapped values, e.g. from different peptides, the
maximum mapped value will be displayed.}

\item{file_format}{a character vector containing the file format of the structure that will be fetched from the database for the PDB identifiers provided
in the \code{pdb_id} column. This can be either ".cif" or ".pdb". The default is \code{".cif"}. We recommend using ".cif" files since every structure contains a ".cif" file
but not every structure contains a ".pdb" file. Fetching and mapping onto ".cif" files takes longer than for ".pdb" files. If a structure file is provided in the
\code{structure_file} argument, the file format is detected automatically and does not need to be provided.}

\item{export_location}{optional, a character argument specifying the path to the location in which the fetched and altered structure files should be saved. If left empty, they will be saved in the current
working directory. The location should be provided in the following format "folderA/folderB".}

\item{structure_file}{optional, a character argument specifying the path to the location and name of a structure file in ".cif" or ".pdb" format. If a structure is provided the \code{peptide_data}
data frame should only contain mapping information for this structure.}

\item{show_progress}{a logical, if \code{show_progress = TRUE}, a progress bar will be shown (default is TRUE).}
}
\value{
The function exports a modified ".pdb" or ".cif" structure file. B-factors have been replaced with scaled (50-100) values provided in the \code{map_value} column.
}
\description{
Peptides are mapped onto PDB structures based on their positions. This is accomplished by replacing the B-factor information in the structure file with values that allow
highlighting of peptides, protein regions and amino acids when the structure is coloured by B-factor. In addition to simply highlighting peptides, protein regions or amino acids,
a continuous variable such as fold changes associated with them can be mapped onto the structure as a colour gradient.
}
\examples{
\dontrun{
map_peptides_on_structure(
  peptide_data = peptide_data,
  uniprot_id = pg_protein_accessions,
  pdb_id = pdb_ids,
  chain = auth_chain,
  start_in_pdb = peptide_start_pdb,
  end_in_pdb = peptide_end_pdb,
  map_value = diff,
  file_format = ".cif",
  export_location = "~/Desktop/Test"
)
}
}
