% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_peptide_in_pdb.R
\name{find_peptide_in_pdb}
\alias{find_peptide_in_pdb}
\title{Finds peptide positions in a PDB structure based on positional matching}
\usage{
find_peptide_in_pdb(
  peptide_data,
  peptide_sequence,
  start,
  end,
  uniprot_id,
  pdb_data = NULL
)
}
\arguments{
\item{peptide_data}{a data frame containing at least the input columns to this function.}

\item{peptide_sequence}{a character column in the \code{peptide_data} data frame that contains the sequence or ID of the peptide that
should be found.}

\item{start}{a numeric column in the \code{peptide_data} data frame that contains start positions of peptides.}

\item{end}{a numeric column in the \code{peptide_data} data frame that contains end positions of peptides.}

\item{uniprot_id}{a character column in the \code{peptide_data} data frame that contains UniProt identifiers that correspond to the
peptides.}

\item{pdb_data}{optional data frame containing data obtained with \code{fetch_pdb()}. If not provided information is fetched automatically.
If this function should be run multiple times it is faster to fetch the information once and provide it to the function. If provided,
make sure that the column names are identical to the ones that would be obtained by calling \code{fetch_pdb()}.}
}
\value{
A data frame that contains peptide positions in the corresponding PDB structures. If a peptide is not found in any structure,
it is not included in the output.
}
\description{
Finds peptide positions in a PDB structure. Often positions of peptides in UniProt and a PDB structure are different due to different
lengths of structures. This function maps a peptide based on its UniProt positions onto a PDB structure. This method is superior to
sequence alignment of the peptide to the PDB structure sequence, since it can also match the peptide if there are truncations or
mismatches.This function also provides an easy way to check if a peptide is present in a pdb structure.
}
\examples{
\dontrun{
find_peptide_in_pdb(
  peptide_data = peptide_data,
  peptide_sequence = peptide,
  start = start,
  end = end,
  uniprot_id = pg_protein_accessions,
  pdb_data = pdb_data
)
}
}
